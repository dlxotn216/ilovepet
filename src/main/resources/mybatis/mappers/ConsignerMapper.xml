<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sch.pl.graduate.recommendation.user.consigner.mapper.ConsignerMapper">
    <resultMap id="ConsignerMap" type="Consigner">
        <id property="userKey" column="USER_KEY"/>
        <result property="userId" column="USER_ID"/>
        <result property="userName" column="USER_NAME"/>
        <result property="age" column="AGE"/>
        <result property="birth" column="BIRTH"/>
        <result property="email" column="EMAIL"/>
        <result property="phone" column="PHONE"/>
        <result property="gender" column="GENDER" typeHandler="GenderTypeHandler"/>
        <result property="profileFileKey" column="PROFILE_FILE_KEY"/>
        <result property="roleKey" column="ROLE_KEY"/>
    </resultMap>

    <select id="getUsersForConsigner" resultMap="sch.pl.graduate.recommendation.user.caretaker.mapper.CaretakerMapper.CaretakerMap">
        SELECT *
        FROM USER A
        LEFT JOIN ROLE B
            ON A.ROLE_KEY = B.ROLE_KEY
        LEFT JOIN CARETAKER C
            ON A.USER_KEY = C.USER_KEY
        LEFT JOIN CARETAKER_FILE D
            ON A.USER_KEY = D.USER_KEY
        LEFT JOIN (SELECT * FROM CODE WHERE CODE_TYPE=1) E
            ON A.CITY_TYPE_KEY = E.CODE_SEQ
        WHERE B.ROLE_NAME LIKE '%CARETAKER'
        GROUP BY A.USER_KEY
        <include refid="sch.pl.graduate.recommendation.common.mapper.orderBy"/>
        <include refid="sch.pl.graduate.recommendation.common.mapper.pagingMysqlClosing"/>
    </select>

    <select id="getUserForConsigner" resultMap="sch.pl.graduate.recommendation.user.caretaker.mapper.CaretakerMapper.CaretakerMap">
        SELECT *
        FROM USER A
        LEFT JOIN ROLE B
            ON A.ROLE_KEY = B.ROLE_KEY
        LEFT JOIN CARETAKER C
            ON A.USER_KEY = C.USER_KEY
        LEFT JOIN CARETAKER_FILE D
            ON A.USER_KEY = D.USER_KEY
        LEFT JOIN (SELECT * FROM CODE WHERE CODE_TYPE=1) E
            ON A.CITY_TYPE_KEY = E.CODE_SEQ
        WHERE B.ROLE_NAME LIKE '%CARETAKER'
        AND A.USER_KEY = #{userKey}
    </select>

    <select id="getUsersForConsignerTotalCount" resultType="Integer">
        SELECT COUNT(*)
        FROM USER A
        LEFT JOIN ROLE B
        ON A.ROLE_KEY = B.ROLE_KEY
        WHERE B.ROLE_NAME LIKE '%CARETAKER'
    </select>

    <resultMap id="matrixMap" type="ConsignerWithCaretakerMatrix">
        <result property="consignerKey" column="CONSIGNER_KEY"/>
        <result property="avg" column="AVG"/>
        <result property="isCurrentUser" column="IS_CURRENT_USER"/>
        <collection property="caretakerColumns" javaType="java.util.List" ofType="CaretakerColumn">
            <id property="caretakerKey" column="CARETAKER_KEY"/>
            <result property="score" column="SCORE"/>
        </collection>
    </resultMap>

    <select id="getConsignerAndCaretakerMatrix" resultMap="matrixMap">
        SELECT
            A.CONSIGNER_KEY,
            A.CARETAKER_KEY,
            A.SCORE AS SCORE,
            B.AVG AS AVG,
            CASE A.CONSIGNER_KEY
                WHEN #{consignerKey} THEN 1
                ELSE 0
            END AS IS_CURRENT_USER
        FROM (SELECT
                  CONSIGNER.USER_KEY     AS CONSIGNER_KEY,
                  CARETAKER.USER_KEY     AS CARETAKER_KEY,
                  AVG(CARE_REVIEW.SCORE) AS SCORE
              FROM (SELECT
                        A.USER_KEY,
                        A.USER_ID
                    FROM USER A
                    WHERE A.ROLE_KEY = 2) AS CONSIGNER
                  CROSS JOIN (SELECT
                                  A.USER_KEY,
                                  A.USER_ID
                              FROM USER A
                              WHERE A.ROLE_KEY = 3) AS CARETAKER
                  LEFT JOIN CARE
                      ON CONSIGNER.USER_KEY = CARE.CONSIGNER_KEY
                         AND CARETAKER.USER_KEY = CARE.CARETAKER_KEY
                  LEFT JOIN CARE_REVIEW AS CARE_REVIEW
                      ON CARE.CARE_KEY = CARE_REVIEW.CARE_KEY
              GROUP BY CONSIGNER.USER_KEY, CARETAKER.USER_KEY
             ) A
            LEFT JOIN (SELECT
                           CONSIGNER.USER_KEY     AS CONSIGNER_KEY,
                           AVG(CARE_REVIEW.SCORE) AS AVG
                       FROM (SELECT
                                 A.USER_KEY,
                                 A.USER_ID
                             FROM USER A
                             WHERE A.ROLE_KEY = 2) AS CONSIGNER
                           CROSS JOIN (SELECT
                                           A.USER_KEY,
                                           A.USER_ID
                                       FROM USER A
                                       WHERE A.ROLE_KEY = 3) AS CARETAKER
                           LEFT JOIN CARE
                               ON CONSIGNER.USER_KEY = CARE.CONSIGNER_KEY
                                  AND CARETAKER.USER_KEY = CARE.CARETAKER_KEY
                           LEFT JOIN CARE_REVIEW AS CARE_REVIEW
                               ON CARE.CARE_KEY = CARE_REVIEW.CARE_KEY
                       GROUP BY CONSIGNER.USER_KEY
                      ) B
                ON A.CONSIGNER_KEY = B.CONSIGNER_KEY
            ORDER BY A.CONSIGNER_KEY ASC, A.CARETAKER_KEY ASC
    </select>

</mapper>