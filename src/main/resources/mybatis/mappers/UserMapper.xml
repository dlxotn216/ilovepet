<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sch.pl.graduate.recommendation.user.common.mapper.UserMapper">

    <resultMap id="UserMap" type="User">
        <id property="userKey" column="USER_KEY"/>
        <result property="userId" column="USER_ID"/>
        <result property="userName" column="USER_NAME"/>
        <result property="age" column="AGE"/>
        <result property="birth" column="BIRTH"/>
        <result property="email" column="EMAIL"/>
        <result property="phone" column="PHONE"/>
        <result property="gender" column="GENDER" typeHandler="GenderTypeHandler"/>
        <result property="profileFileKey" column="PROFILE_FILE_KEY"/>
        <result property="roleKey" column="ROLE_KEY"/>
    </resultMap>

    <resultMap id="CaretakerMap" type="Caretaker">
        <id property="userKey" column="USER_KEY"/>
        <result property="userId" column="USER_ID"/>
        <result property="userName" column="USER_NAME"/>
        <result property="age" column="AGE"/>
        <result property="birth" column="BIRTH"/>
        <result property="email" column="EMAIL"/>
        <result property="phone" column="PHONE"/>
        <result property="gender" column="GENDER" typeHandler="GenderTypeHandler"/>
        <result property="profileFileKey" column="PROFILE_FILE_KEY"/>
        <result property="roleKey" column="ROLE_KEY"/>

        <result property="barking" column="BARKING"/>
        <result property="marking" column="MARKING"/>
        <result property="mounting" column="MOUNTING"/>
        <result property="aggression" column="AGGRESSION"/>
        <result property="size" column="SIZE"/>

        <result property="petCount" column="PET_COUNT"/>
        <result property="title" column="TITLE"/>
        <result property="summary" column="SUMMARY"/>
        <result property="feePerNight" column="FEE_PER_NIGHT"/>
        <result property="additionalFee" column="ADDITIONAL_FEE"/>
        <result property="liveWithFamily" column="LIVE_WITH_FAMILY" typeHandler="org.apache.ibatis.type.BooleanTypeHandler"/>
        <result property="hasYoungChildren" column="HAS_YOUNG_CHILDREN" typeHandler="org.apache.ibatis.type.BooleanTypeHandler"/>
        <result property="yard" column="YARD" typeHandler="org.apache.ibatis.type.BooleanTypeHandler"/>
        <result property="pickup" column="PICKUP" typeHandler="org.apache.ibatis.type.BooleanTypeHandler"/>
        <result property="checkIn" column="CHECK_IN"/>
        <result property="checkOut" column="CHECK_IN"/>
        <collection property="introductionFiles" javaType="java.util.List" ofType="CaretakerFile">
            <id property="fileKey" column="FILE_KEY"/>
        </collection>
    </resultMap>

    <insert id="addUser">
        INSERT INTO USER
        (
        USER_ID,
        PASSWORD,
        BIRTH,
        GENDER,
        EMAIL,
        PHONE,
        PROFILE_FILE_KEY,
        ROLE_KEY,
        USER_NAME,
        IS_ACCOUNT_NON_EXPIRED,
        IS_ACCOUNT_NON_LOCKED,
        IS_CREDENTIALS_NON_EXPIRED,
        IS_ENABLED
        )
        VALUES
        (
        #{userId},
        #{password},
        #{birth},
        #{gender},
        #{email},
        #{phone},
        #{profileFileKey},
        #{roleKey},
        #{userName},
        1,
        1,
        1,
        1
        )
        <selectKey resultType="Long" keyProperty="userKey" order="AFTER" keyColumn="USER_KRY">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <select id="getUser" resultMap="UserMap">
        SELECT *, YEAR(CURRENT_DATE) - YEAR(BIRTH) AS AGE
        FROM USER A
        LEFT JOIN FILE B
        ON A.PROFILE_FILE_KEY = B.FILE_KEY
        WHERE
        A.USER_KEY = #{userKey}
        <if test="userId != null">
            AND A.USER_ID = #{userId}
        </if>
    </select>

    <select id="getUserByUserKey" resultMap="UserMap">
        SELECT *, YEAR(CURRENT_DATE) - YEAR(BIRTH) AS AGE
          FROM USER A
          LEFT JOIN FILE B
            ON A.PROFILE_FILE_KEY = B.FILE_KEY
        WHERE A.USER_KEY = #{userKey}
    </select>

    <select id="getUserByUserId" resultMap="UserMap">
        SELECT *, YEAR(CURRENT_DATE) - YEAR(BIRTH) AS AGE
          FROM USER A
          LEFT JOIN FILE B
            ON A.PROFILE_FILE_KEY = B.FILE_KEY
        WHERE A.USER_ID = #{userId}
    </select>

    <select id="getUsers" resultMap="UserMap">
        SELECT *, YEAR(CURRENT_DATE) - YEAR(BIRTH) AS AGE
        FROM USER A
        LEFT JOIN FILE B
        ON A.PROFILE_FILE_KEY = B.FILE_KEY
        <include refid="sch.pl.graduate.recommendation.common.mapper.orderBy"/>
        <include refid="sch.pl.graduate.recommendation.common.mapper.pagingMysqlClosing"/>
    </select>

    <select id="getUsersTotalCount">
        SELECT COUNT(*)
        FROM USER
    </select>

    <select id="getUsersForCaretaker" resultMap="UserMap">
        SELECT *
        FROM USER A
        LEFT JOIN ROLE B
        ON A.ROLE_KEY = B.ROLE_KEY
        WHERE B.ROLE_NAME LIKE '%CONSIGNER'
        <include refid="sch.pl.graduate.recommendation.common.mapper.orderBy"/>
        <include refid="sch.pl.graduate.recommendation.common.mapper.pagingMysqlClosing"/>
    </select>

    <select id="getUsersForCaretakerTotalCount" resultType="Integer">
        SELECT COUNT(*)
        FROM USER A
        LEFT JOIN ROLE B
        ON A.ROLE_KEY = B.ROLE_KEY
        WHERE B.ROLE_NAME LIKE '%CONSIGNER'
    </select>

    <select id="getUsersForConsigner" resultMap="CaretakerMap">
        SELECT *
        FROM USER A
        LEFT JOIN ROLE B
        ON A.ROLE_KEY = B.ROLE_KEY
        LEFT JOIN CARETAKER C
        ON A.USER_KEY = C.USER_KEY
        LEFT JOIN CARETAKER_FILE D
        ON A.USER_KEY = D.USER_KEY
        WHERE B.ROLE_NAME LIKE '%CARETAKER'
        GROUP BY A.USER_KEY
        <include refid="sch.pl.graduate.recommendation.common.mapper.orderBy"/>
        <include refid="sch.pl.graduate.recommendation.common.mapper.pagingMysqlClosing"/>
    </select>

    <select id="getUserForConsigner" resultMap="CaretakerMap">
        SELECT *
        FROM USER A
        LEFT JOIN ROLE B
        ON A.ROLE_KEY = B.ROLE_KEY
        LEFT JOIN CARETAKER C
        ON A.USER_KEY = C.USER_KEY
        LEFT JOIN CARETAKER_FILE D
        ON A.USER_KEY = D.USER_KEY
        WHERE B.ROLE_NAME LIKE '%CARETAKER'
            AND A.USER_KEY = #{userKey}
    </select>

    <select id="getUsersForConsignerTotalCount" resultType="Integer">
        SELECT COUNT(*)
        FROM USER A
        LEFT JOIN ROLE B
        ON A.ROLE_KEY = B.ROLE_KEY
        WHERE B.ROLE_NAME LIKE '%CARETAKER'
    </select>


    <update id="updateUser" parameterType="User">
        UPDATE
        USER
        <set>
            <if test="password != null and !password.trim().equals('') ">
                PASSWORD = #{password},
            </if>
            <if test="birth != null and !birth.trim().equals('') ">
                BIRTH = #{birth},
            </if>
            <if test="gender != null">
                GENDER = #{gender},
            </if>
            <if test="email != null and !email.trim().equals('') ">
                EMAIL = #{email},
            </if>
            <if test="phone != null and !phone.trim().equals('') ">
                PHONE = #{phone},
            </if>
            <if test="profileFileKey != null">
                PROFILE_FILE_KEY = #{profileFileKey},
            </if>
            <if test="roleKey != null">
                ROLE_KEY = #{roleKey},
            </if>
            <if test="userName != null and !userName.trim().equals('') ">
                USER_NAME = #{userName},
            </if>
            <if test="isAccountNonExpired != null">
                IS_ACCOUNT_NON_EXPIRED = #{isAccountNonExpired},
            </if>
            <if test="isAccountNonLocked != null">
                IS_ACCOUNT_NON_LOCKED = #{isAccountNonLocked},
            </if>
            <if test="isCredentialsNonExpired != null">
                IS_CREDENTIALS_NON_EXPIRED = #{isCredentialsNonExpired},
            </if>
            <if test="isEnabled != null">
                IS_ENABLED = #{isEnabled}
            </if>
        </set>
        WHERE
        USER_KEY = #{userKey}
    </update>

    <delete id="deleteUser">
        DELETE FROM USER
          WHERE
          USER_KEY = #{userKey};
    </delete>
</mapper>